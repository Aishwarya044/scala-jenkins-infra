---
- name: Create scabot user
  user: name="{{scabot_user}}"

- name: Create scabot dirs
  file: path={{item}} state=directory owner="{{scabot_user}}" mode="0755"
  with_items:
      - "{{scabot_home}}/scabot"
      - "{{scabot_home}}/logs"
      - "{{scabot_home}}/.ssh"
        
- name: Authorize the scabot public key
  authorized_key:
    user: "{{ scabot_user }}"
    state: present
    key: "{{ scabot_public_key }}"

- name: Configure scabot
  template: src=scabot.conf dest="{{scabot_home}}" owner="{{scabot_user}}"

- name: Configure scabot (prod)
  template: src=scabot-production.conf dest="{{scabot_home}}" owner="{{scabot_user}}"

# git_user scabot_user do
#   home      scabot_home
#   # owner     scabot_user
#   full_name 'Scabot'
#   email     'adriaan@lightbend.com'
# end

    
- name: Checkout scabot repo
  become_user: "{{scabot_user}}"
  become: yes
  git:
    repo: 'https://github.com/scala/scabot.git'
    dest: "{{scabot_home}}/scabot"

# - name: Owner is scabot
#   file: dest="{{scabot_home}}/scabot" owner={{scabot_user}} mode=0775 recurse=yes

- name: Git config denyCurrentBranch
  become_user: "{{scabot_user}}"
  become: yes
  command: "git config receive.denyCurrentBranch ignore" # sudo -u {{scabot_user}} 
  args:
    chdir: "{{scabot_home}}/scabot/"

- name: Setup post-receive hoook
  copy: src=post-receive dest="{{scabot_home}}/scabot/.git/hooks/" owner="{{scabot_user}}" mode="0755"

- name: Build scabot
  become_user: "{{scabot_user}}"
  command: "scripts/stage"
  args:
    chdir: "{{scabot_home}}/scabot/"
